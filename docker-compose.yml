version: "3.8"

services:
  postgres-db:
    environment:
      - LITEHMRC_DB_USER=postgres
      - LITEHMRC_DB_PASSWORD=password
      - LITEHMRC_DB_SCHEMA=postgres
      - POSTGRES_PASSWORD=password
    build: './database'
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:5.0.6
    ports:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  mailhog:
    ports:
      - 8025:8025  # HTTP
      - 587:1025  # SMTP
    image: mailhog/mailhog
    platform: linux/amd64
    networks:
      - backend

  web-api:
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE
    build:
      context: .
      dockerfile: "Dockerfile"
    platform: linux/amd64
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - postgres-db
      - redis
      - mailhog
    expose:
      - 8000
    networks:
      - backend
      - icms_public
    command: pipenv run ./manage.py runserver 0.0.0.0:8000

  celery-worker:
    build:
      context: .
      dockerfile: "Dockerfile"
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE
    command: pipenv run celery -A conf worker -l INFO --events
    platform: linux/amd64
    volumes:
        - .:/code
    depends_on:
      - postgres-db
      - redis
    networks:
      - backend
      - icms_public

  celery-beat:
    build:
      context: .
      dockerfile: "Dockerfile"
    environment:
      - DJANGO_SETTINGS_MODULE
    command: pipenv run celery -A conf beat -l INFO
    platform: linux/amd64
    depends_on:
      - redis
    networks:
      - backend

  celery-flower:
    build: .
    command: pipenv run celery -A conf flower --loglevel=DEBUG --port=9090
    platform: linux/amd64
    ports:
      - "9090:9090"
    depends_on:
      - redis
    networks:
      - backend

networks:
  backend:
  icms_public:
    name: "icms_public"


volumes:
  pgdata:
  maildata:
  redis_data:

version: 2.1

jobs:
  tests:
    docker:
      - image: circleci/python:3.7
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
      - image: mailhog/mailhog

    environment:
      DEBUG: True
      PIPENV_VENV_IN_PROJECT: 'enabled'

    working_directory: ~/lite-hmrc

    steps:
      - checkout

      - run:
          name: Set Environment File
          command: cp local.env .env

      # Download and cache dependencies
      # ensure this step occurs *before* installing dependencies
      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - run:
          name: Install code coverage
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov

      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Check migrations are made
          command: pipenv run ./manage.py makemigrations --check

      - run:
          name: Run tests
          command: pipenv run pytest --cov=. --cov-report xml --cov-config=.coveragerc
      - store_test_results:
          path: test-results

      - run:
          name: Run Bandit tests
          command: |
            pipenv run bandit -r .
      - run:
          name: Upload code coverage
          command: ./codecov

  linting:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Prospector
          command: pipenv run prospector -W pylint -W pep257

      - run:
          name: Black
          command: pipenv run black . --check --diff

      - run:
          name: isort
          command: pipenv run isort --check --diff .

  check_background_tasks_up:
    machine:
      image: ubuntu-2004:202010-01
    resource_class: medium
    working_directory: /tmp/app
    steps:
      - checkout
      - run:
          name: Run background task scheduler
          command: docker-compose -f docker-compose-circleci-background-tasks-up.yml up --exit-code-from check-background-tasks

workflows:
  version: 2
  test:
    jobs:
      - tests
      - linting
      - check_background_tasks_up

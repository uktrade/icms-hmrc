version: 2.1

jobs:
  tests:
    docker:
      - image: circleci/python:3.10
      - image: circleci/postgres:12
        environment:
          DJANGO_SETTINGS_MODULE: 'conf.settings_test'
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
      - image: mailhog/mailhog

    environment:
      DEBUG: True
      PIPENV_VENV_IN_PROJECT: 'enabled'
      DJANGO_SETTINGS_MODULE: 'conf.settings_test'

    working_directory: ~/icms-hmrc

    steps:
      - checkout

      - run:
          name: Set Environment File
          command: cp .circleci/ci.env .env

      # Download and cache dependencies
      # ensure this step occurs *before* installing dependencies
      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - run:
          name: Install code coverage
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            chmod +x codecov

      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Check migrations are made
          command: pipenv run ./manage.py makemigrations --check

      - run:
          name: Run tests
          command: pipenv run pytest --cov=. --cov-report xml --cov-config=.coveragerc
      - store_test_results:
          path: test-results
      - run:
          name: Upload code coverage
          command: ./codecov

  linting:
    docker:
      - image: circleci/python:3.10
    steps:
      - checkout

      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Flake8
          command: pipenv run flake8 --ignore=E501,W503

      - run:
          name: Black
          command: pipenv run black .

      - run:
          name: isort
          command: pipenv run isort .

      - run:
          name: Bandit
          command: |
            pipenv run bandit -r .

workflows:
  version: 2
  test:
    jobs:
      - tests
      - linting
